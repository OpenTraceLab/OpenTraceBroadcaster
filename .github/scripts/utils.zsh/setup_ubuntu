autoload -Uz log_error log_status log_info mkcd

if (( ! ${+project_root} )) {
  log_error "'project_root' not set. Please set before running ${0}."
  return 2
}

if (( ! ${+target} )) {
  log_error "'target' not set. Please set before running ${0}."
  return 2
}

pushd ${project_root}

typeset -g QT_VERSION

local -a apt_args=(
  ${CI:+-y}
  --no-install-recommends
)
if (( _loglevel == 0 )) apt_args+=(--quiet)

if (( ! (${skips[(Ie)all]} + ${skips[(Ie)deps]}) )) {
  log_group 'Installing obs-studio build dependencies...'

  local suffix
  if [[ ${CPUTYPE} != "${target##*-}" ]] {
    local -A arch_mappings=(
      aarch64 arm64
      x86_64 amd64
    )

    suffix=":${arch_mappings[${target##*-}]}"

    sudo apt-get install ${apt_args} gcc-${${target##*-}//_/-}-linux-gnu g++-${${target##*-}//_/-}-linux-gnu
  }

  sudo add-apt-repository --yes ppa:obsproject/obs-studio
  sudo apt update

  sudo apt-get install ${apt_args} \
    build-essential \
    libgles2-mesa-dev \
    libsimde-dev \
    obs-studio \
    pkg-config \
    libglib2.0-dev \
    jq

  local -a _qt_packages=()

  if (( QT_VERSION == 5 )) {
    _qt_packages+=(
      qtbase5-dev${suffix}
      libqt5svg5-dev${suffix}
      qtbase5-private-dev${suffix}
      libqt5x11extras5-dev${suffix}
    )
  } else {
    _qt_packages+=(
      qt6-base-dev${suffix}
      libqt6svg6-dev${suffix}
      qt6-base-private-dev${suffix}
    )
  }

  sudo apt-get install ${_qt_packages}

  # Install OpenTraceCapture dependency
  log_group 'Installing OpenTraceCapture...'
  local otc_latest_url=$(curl -s https://api.github.com/repos/OpenTraceLab/OpenTraceCapture/releases/latest | jq -r '.assets[] | select(.name | test("linux.*\\.tar\\.gz$")) | .browser_download_url' | head -1)
  
  if [[ -z "${otc_latest_url}" ]]; then
    log_error "Could not find OpenTraceCapture Linux release"
    return 2
  fi
  
  curl -L -o /tmp/opentracecapture-linux.tar.gz "${otc_latest_url}"
  sudo tar -xzf /tmp/opentracecapture-linux.tar.gz -C /usr/local
  sudo ldconfig
  
  log_group
}
